/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linkedlist;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test
    public void testLinkedListInstantiation() {
        LinkedList<Number> list = new LinkedList<Number>();
        assertNull(list.head);
    }
    @Test
    public void testLinkedListInsertion() {
        LinkedList<Number> list = new LinkedList<Number>();
        list.insert(5);
        assertNotNull(list.head);
        assertEquals(5, list.head.value);
    }
    @Test
    public void testLinkedListMultipleInsertion() {
        LinkedList<Number> list = new LinkedList<Number>();
        list.insert(5);
        list.insert(3);
        list.insert(1);
        assertEquals(1, list.head.value);
        assertEquals(3, list.head.next.value);
        assertEquals(5, list.head.next.next.value);
    }
    @Test
    public void testLinkedListIncludesValue() {
        LinkedList<Number> list = new LinkedList<Number>();
        list.insert(5);
        list.insert(3);
        list.insert(1);
        assertTrue(list.includes(3));
    }
    @Test
    public void testLinkedListDoesNotIncludeValue() {
        LinkedList<Number> list = new LinkedList<Number>();
        list.insert(5);
        list.insert(3);
        list.insert(1);
        assertFalse(list.includes(10));
    }
    @Test
    public void testLinkedListToString() {
        LinkedList<Number> list = new LinkedList<Number>();
        list.insert(5);
        list.insert(3);
        list.insert(1);
        assertEquals("{ 1 } -> { 3 } -> { 5 } -> NULL", list.toString());
    }
    @Test
    public void testAppend() {
        LinkedList<Integer> list = new LinkedList<>();
        list.append(1);
        assertEquals("{ 1 } -> NULL", list.toString());
    }
    @Test
    public void testAppendMultipleNodes() {
        LinkedList<Integer> list = new LinkedList<>();
        list.append(1);
        list.append(2);
        list.append(3);
        assertEquals("{ 1 } -> { 2 } -> { 3 } -> NULL", list.toString());
    }
    @Test
    public void testInsertBeforeInMiddle() {
        LinkedList<Integer> list = new LinkedList<>();
        list.append(1);
        list.append(2);
        list.append(3);
        list.insertBefore(2, 5);
        assertEquals("{ 1 } -> { 5 } -> { 2 } -> { 3 } -> NULL", list.toString());
    }
    @Test
    public void testInsertBeforeAtBeginning() {
        LinkedList<Integer> list = new LinkedList<>();
        list.append(1);
        list.append(2);
        list.insertBefore(1, 5);
        assertEquals("{ 5 } -> { 1 } -> { 2 } -> NULL", list.toString());
    }
    @Test
    public void testInsertAfterInMiddle() {
        LinkedList<Integer> list = new LinkedList<>();
        list.append(1);
        list.append(2);
        list.append(3);
        list.insertAfter(2, 5);
        assertEquals("{ 1 } -> { 2 } -> { 5 } -> { 3 } -> NULL", list.toString());
    }
    @Test
    public void testInsertAfterAtEnd() {
        LinkedList<Integer> list = new LinkedList<>();
        list.append(1);
        list.append(2);
        list.insertAfter(2, 5);
        assertEquals("{ 1 } -> { 2 } -> { 5 } -> NULL", list.toString());
    }
}


